name: mini_alpha_zero

entry_points:
  train:
    parameters:
        player: {type: string, default: "default_config"}
        max_iter: {type: float, default: 3}
        max_epochs: {type: float, default: 10000}
        debug: {type: bool, default: False}
    command: "ipython Model/model.py -- 
              --player={player} 
              -i {max_iter} -ep {max_epochs} 
              --debub={debug}"

  watch_and_learn:
    parameters:
        num_of_parallel_processes: {type: float, default: 2}
        num_of_games_per_process: {type: float, default: git push0}
        rollouts_per_move: {type: float, default: 100}
        iterations: {type: float, default: 1}
        epochs: {type: float, default: 5}
        selflearnruns: {type: float, default: 5}
        fork_method: {type: string, default: "spawn"}
        trainee: {type: string, default: "Player/MightyMonkey.yaml"}
        player_one: {type: string, default: "Player/MightyMonkey.yaml"}
        player_two: {type: string, default: "Player/MightyMonkey.yaml"}
    command: "python3 Matches/watch_and_learn.py -p {num_of_parallel_processes} -g {num_of_games_per_process} 
             -r {rollouts_per_move} -i {iterations} -e {epochs} -s {selflearnruns}
             --trainee {trainee} --player_one {player_one} --player_two {player_two}
             --fork_method {fork_method}"

  self_learn:
    parameters:
        num_of_parallel_processes: {type: float, default: 2}
        num_of_games_per_process: {type: float, default: 10}
        rollouts_per_move: {type: float, default: 100}
        iterations: {type: float, default: 1}
        epochs: {type: float, default: 5}
        selflearnruns: {type: float, default: 5}
        fork_method: {type: string, default: "spawn"}
        player: {type: string, default: "Player/AltruisticOlm.yaml"}
    command: "python3 Matches/self_learn.py -p {num_of_parallel_processes} -g {num_of_games_per_process} 
             -r {rollouts_per_move} -i {iterations} -e {epochs} -s {selflearnruns}
             --fork_method {fork_method} --player {player}"

  analysis_match:
    parameters:
        player_one: {type: string, default: "Player/MockingBird.yaml"}
        player_two: {type: string, default: "Player/MockingBird.yaml"}
        rollouts_per_move: {type: float, default: 100}
        report_cycle: {type: float, default: 10}
        show_game: {type: float, default: 0}
    command: "python3 Matches/analysis_match.py --player_one {player_one} --player_two {player_two}
             --rollouts_per_move {rollouts_per_move} --report_cycle {report_cycle} 
             --show_game {show_game}"

  create_dataset:
    parameters:
        num_of_parallel_processes: {type: float, default: 2}
        num_of_games_per_process: {type: float, default: 10}
        fork_method: {type: string, default: "spawn"}
        player_one: {type: string, default: "Player/StockingFish.yaml"}
        player_two: {type: string, default: "Player/StockingFish.yaml"}
    command: "python3 Matches/create_dataset.py -p {num_of_parallel_processes} -g {num_of_games_per_process} 
             --fork_method {fork_method} --player_one {player_one} --player_two {player_two}"